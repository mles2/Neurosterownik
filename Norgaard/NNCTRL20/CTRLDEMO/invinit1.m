% ------------------------------>  INVINIT1.M  <------------------------------
% Initialization file for the program "special1"


% ----------      Switches       -----------
simul      = 'simulink';     % Control object spec. (simulink/matlab/nnet)
refty      = 'siggener';     % Reference signal (siggener/<variable name>)
if exist('simulink')~=5,
  simul      ='matlab';      % Simulink not present
end


% ------    General Initializations  -------
Ts = 0.20;                   % Sampling period (in seconds)
samples = 200 ;              % Number of samples to be simulated
u_0 = 0;                     % Initial control input
y_0 = 0;                     % Initial output
ulim_min = -Inf;             % Minimum control input
ulim_max = Inf;              % Maximum control input


% --  System to be Controlled (SIMULINK) --
integrator= 'ode45';         % Name of dif. eq. solver (f. ex. ode45 or ode15s)
sim_model = 'spm1';          % Name of SIMULINK model


% ---  System to be Controlled (MATLAB)  --
mat_model = 'springm';       % Name of MATLAB model
model_out = 'smout';         % Output equation (function of the states)
x0        = [0;0];           % Initial states
 

% ----- Neural Network Specification ------
% The "forward model file" must contain the following variables which together
% define a NNARX-model:
% NN, NetDeff, W1f, W2f
% and the "inverse model file" must contain
% NN, NetDefi, W1i, W2i
% (i.e. regressor structure, architecture definition, and weight matrices)
nnforw = 'forward';          % Name of file containing forward model
nninv  = 'inverse';          % Name of file containing inverse model


% ------------ Reference Model ---------------
Am = [1 -0.7];               % Model denominator
Bm = [0.3];                  % Model numerator (starts in z^-1)
Am=1; Bm=1;

% ---------- Training alg. parameters --------
maxiter = 10;                % Number of epochs. iterations=maxiter*samples
eta = 0.1;                   % Step size


% ------------  Reference signal  ------------
% Reference generated by the signal generator
dc      = 0;                 % DC-level
sq_amp  = 0.5;               % Amplitude of square signals (row vector)
sq_freq = 0.1;               % Frequency of square signals (column vector)
sin_amp = [0];               % Amplitude of sine signals  (row vector)
sin_freq= [0]';              % Frequency of sine signals   (column vector)
Nvar  = 0;                   % Variance of white noise signal


% ------- Specify data vectors to plot --------
% plot_a and plot_b must be cell structures containing the vector names in strings
plot_a = {'ref_data','y_data','ym_data','yhat_data'};
plot_b = {'u_data'};
