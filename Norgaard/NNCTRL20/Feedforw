          ---------------------------------------------------------------
                      
          OVERVIEW OF FILES ASSOCIATED WITH SIMULATION OF PID-CONTROLLERS
           OPTIMIZED WITH A FEEDFORWARD PRODUCED BY A NEURAL NETWORK
                   
          ---------------------------------------------------------------
                    
MATLAB tools for simulating control of nonlinear systems by a combination of
PID-control and nonlinear feedforward with neural networks.


                                 --OO--
                                  

DESCRIPTION
Assuming that the process to be controlled can be described by

     y(t) = f(y(t-1),...,y(t-n),u(t-1),...,u(t-m))

then the present files can train a neural network to act as the inverse
of the process:
     ^      ^ -1
     u(t) = f   (y(t+1),y(t),...,y(t-n+1),u(t-1),...,u(t-m+1))

This inverse model can then be used as feedforward controller for the process
by replacing the outputs y(.) with references, r(.). A PID controller can then
be used for stabilizing the process and for compensating for possible
disturbances.


The process to be controlled can be a SIMULINK model or a model described by a
set of differential equations specified in a MATLAB-function. If the training
data is obtained through a "real world" experiment (i.e., a MATLAB/SIMULINK
model is not available), the closed-loop system can also be simulated assuming
that the network model is a perfect description of the system to be controlled.


                                --OO--
                                                                  

FILE OVERVIEW:
Feedforw- This file.
ffcon   - Program for simulating the control system.
ffinit  - File containing design parameters for 'ffcon'.


The following functions must be available as well:
NNSYSID toolbox
shift, siggener                    - Functions used by ffcon


                                --OO--
                                 
                                 
SUGGESTED WORKING PROCEDURE FOR TESTING THE CONCEPT ON A KNOWN PROCESS

1: BUILD THE PROCESS
Build the process in SIMULINK or write the differential equations in a
MATLAB-function. If SIMULINK is used, specify input to and output from the
model by an inport and an outport, respectively. If SIMULINK is not available, 
write the differential equations in a MATLAB-function in the format required
by the ODE45 differential equation solver.

2: MAKE AN EXPERIMENT
Use the function 'experim' for generating a data set to be used for inferring
a neural network model of the process.

3: TRAIN AN INVERSE MODEL
Read the text file 'Inverse'. The inverse model may for example be approximated
by an FIR-model to avoid stability problems when applying the model for
feedforward. 

4: SIMULATION OF CLOSED-LOOP SYSTEM
The closed-loop system is simulated with the function 'ffcon'. The design
parameters necessary for running this program must be defined in the file
'ffinit'. For example, the user must specify the name of the
MATLAB/SIMULINK model, sampling period, reference signal, PID parameters,
and the name of the file containing architecture and weights of the
inverse model. 
